language: c++
sudo: required
dist: trusty

env:
  global:
    - secure: QRryDQOY/A0kVUq+6/05LiBwfyiVh9kYtenAquUfOOZfITpOTBG81AZKfwHAKxn6QcT2UQ3cAR9lp7AoFqewfx7y5Ts/wHB/657QIA5VlL6UvdtfTSDx8t34MZ1hxi6PO6V6r2foNQna1WFuRJSrE7bVhCZIgpesO5Z0L83szaE=
    - secure: O0dISDIRWhlYu8CN/r0GJdM3CWxZWXNGXz6gAJnXC0Rum5HOeTWXIBa91bdcMbbAALmtV+5RkixNyWjJ33eeVy+IcRftD7eg+Q5hYNKvXdrxx/fka3LAhr1x/bG2EkCpgpRCEnWqFQubzXtclVEbbiaFY8B1Yutv2ZgA3VN+Bas=

matrix:
  include:
    - os: linux
      sudo: required
      dist: trusty
      compiler: clang
      env: TARGET="linux_clang" CMAKE_FLAGS="-DCMAKE_CXX_COMPILER=clang++-3.5 -DCMAKE_C_COMPILER=clang-3.5"
    - os: linux
      sudo: required
      dist: trusty
      compiler: gcc
      env: TARGET="linux_gcc" CMAKE_FLAGS="-DCMAKE_CXX_COMPILER=g++-5 -DCMAKE_C_COMPILER=gcc-5"
    - os: linux
      sudo: required
      dist: trusty
      compiler: gcc
      env: TARGET=linux_gcc49 CMAKE_FLAGS="-DCMAKE_CXX_COMPILER=g++-4.9 -DCMAKE_C_COMPILER=gcc-4.9"
    - os: linux
      sudo: required
      dist: trusty
      env: TARGET="apidoc"
      git:
        submodules: false
    - os: linux
      sudo: required
      dist: trusty
      compiler: mingw
      env: TARGET="win32" CMAKE_FLAGS="-DMINGW=1 -DMINGW_TYPE=i686"
    - os: linux
      sudo: required
      dist: trusty
      compiler: mingw
      env: TARGET="win64" CMAKE_FLAGS="-DMINGW=1 -DMINGW_TYPE=x86_64"
    - os: osx
      sudo: false
      compiler: clang
      env: TARGET="osx" CMAKE_FLAGS="-DCMAKE_CXX_COMPILER=clang++-3.5 -DCMAKE_C_COMPILER=clang-3.5"

  allow_failures:
    # work on it! :)
    - env: TARGET="osx" CMAKE_FLAGS="-DCMAKE_CXX_COMPILER=clang++-3.5 -DCMAKE_C_COMPILER=clang-3.5"
    - env: TARGET="win32" CMAKE_FLAGS="-DMINGW=1 -DMINGW_TYPE=i686"
    - env: TARGET="win64" CMAKE_FLAGS="-DMINGW=1 -DMINGW_TYPE=x86_64"
  # TODO: use Protobuf 3 (currently there is just a beta) to be able to compile with GCC  >=5.1 -std=c++11; if -D_GLIBCXX_USE_CXX11_ABI=0 is getting used, our tests don't compile anymore
    - env: TARGET="linux_gcc" CMAKE_FLAGS="-DCMAKE_CXX_COMPILER=g++-5 -DCMAKE_C_COMPILER=gcc-5"

  fast_finish: true # don't wait for allow_failures (OSX) to fail, gives faster response

before_install:
  - bash tool/travis.sh target_before_install

script:
  - bash tool/travis.sh target_script

after_success:
  - bash tool/travis.sh target_after_success
